GAS LISTING /tmp/ccqieEPI.s 			page 1


   1               		.file	"ADC.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/ffg/DATA/Electronics/AVR/PSU/",100,0,2,.Ltext0
   8               		.stabs	"ADC.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  27               		.stabs	"ADC.h",130,0,0,0
  28               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/avr/io.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/inttypes.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.7.2/include/stdint.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/stdint.h",130,0,0,0
  33               		.stabs	"int8_t:t(6,1)=(0,10)",128,0,121,0
  34               		.stabs	"uint8_t:t(6,2)=(0,11)",128,0,122,0
  35               		.stabs	"int16_t:t(6,3)=(0,1)",128,0,123,0
  36               		.stabs	"uint16_t:t(6,4)=(0,4)",128,0,124,0
  37               		.stabs	"int32_t:t(6,5)=(0,3)",128,0,125,0
  38               		.stabs	"uint32_t:t(6,6)=(0,5)",128,0,126,0
  39               		.stabs	"int64_t:t(6,7)=(0,6)",128,0,128,0
  40               		.stabs	"uint64_t:t(6,8)=(0,7)",128,0,129,0
  41               		.stabs	"intptr_t:t(6,9)=(6,3)",128,0,142,0
  42               		.stabs	"uintptr_t:t(6,10)=(6,4)",128,0,147,0
  43               		.stabs	"int_least8_t:t(6,11)=(6,1)",128,0,159,0
  44               		.stabs	"uint_least8_t:t(6,12)=(6,2)",128,0,164,0
  45               		.stabs	"int_least16_t:t(6,13)=(6,3)",128,0,169,0
  46               		.stabs	"uint_least16_t:t(6,14)=(6,4)",128,0,174,0
  47               		.stabs	"int_least32_t:t(6,15)=(6,5)",128,0,179,0
  48               		.stabs	"uint_least32_t:t(6,16)=(6,6)",128,0,184,0
  49               		.stabs	"int_least64_t:t(6,17)=(6,7)",128,0,192,0
  50               		.stabs	"uint_least64_t:t(6,18)=(6,8)",128,0,199,0
  51               		.stabs	"int_fast8_t:t(6,19)=(6,1)",128,0,213,0
  52               		.stabs	"uint_fast8_t:t(6,20)=(6,2)",128,0,218,0
  53               		.stabs	"int_fast16_t:t(6,21)=(6,3)",128,0,223,0
  54               		.stabs	"uint_fast16_t:t(6,22)=(6,4)",128,0,228,0
  55               		.stabs	"int_fast32_t:t(6,23)=(6,5)",128,0,233,0
  56               		.stabs	"uint_fast32_t:t(6,24)=(6,6)",128,0,238,0
  57               		.stabs	"int_fast64_t:t(6,25)=(6,7)",128,0,246,0
GAS LISTING /tmp/ccqieEPI.s 			page 2


  58               		.stabs	"uint_fast64_t:t(6,26)=(6,8)",128,0,253,0
  59               		.stabs	"intmax_t:t(6,27)=(6,7)",128,0,273,0
  60               		.stabs	"uintmax_t:t(6,28)=(6,8)",128,0,278,0
  61               		.stabn	162,0,0,0
  62               		.stabn	162,0,0,0
  63               		.stabs	"int_farptr_t:t(4,1)=(6,5)",128,0,77,0
  64               		.stabs	"uint_farptr_t:t(4,2)=(6,6)",128,0,81,0
  65               		.stabn	162,0,0,0
  66               		.stabn	162,0,0,0
  67               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/avr/fuse.h",130,0,0,0
  68               		.stabs	"__fuse_t:t(7,1)=(7,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,252,0
  69               		.stabn	162,0,0,0
  70               		.stabn	162,0,0,0
  71               		.stabn	162,0,0,0
  72               		.stabs	"ADC_initialize:F(0,15)",36,0,8,ADC_initialize
  73               	.global	ADC_initialize
  74               		.type	ADC_initialize, @function
  75               	ADC_initialize:
  76               		.stabd	46,0,0
   1:ADC.c         **** #include "ADC.h"
   2:ADC.c         **** 
   3:ADC.c         **** // define the raw ADC read variables
   4:ADC.c         **** uint16_t ADC_reading = 0;
   5:ADC.c         **** unsigned char ADC_status = 0;
   6:ADC.c         **** 
   7:ADC.c         **** // Setup for the ADC channels
   8:ADC.c         **** void ADC_initialize(void)
   9:ADC.c         **** {
  77               		.stabn	68,0,9,.LM0-.LFBB1
  78               	.LM0:
  79               	.LFBB1:
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
  10:ADC.c         **** 	// initialize ADC on the voltage channel
  11:ADC.c         **** 	ADMUX |= VOLTAGE_MON;
  84               		.stabn	68,0,11,.LM1-.LFBB1
  85               	.LM1:
  86 0000 87B1      		in r24,0x7
  87 0002 87B9      		out 0x7,r24
  12:ADC.c         **** 	ADC_status = ADC_VOLTAGE;
  88               		.stabn	68,0,12,.LM2-.LFBB1
  89               	.LM2:
  90 0004 81E0      		ldi r24,lo8(1)
  91 0006 8093 0000 		sts ADC_status,r24
  13:ADC.c         **** 	// Enable the ADC in interupt mode
  14:ADC.c         **** 	ADCSRA = (1 << ADEN) | (1 << ADIE);
  92               		.stabn	68,0,14,.LM3-.LFBB1
  93               	.LM3:
  94 000a 88E8      		ldi r24,lo8(-120)
  95 000c 86B9      		out 0x6,r24
  15:ADC.c         **** 	// Set the ADC prescaler to 128 for max
  16:ADC.c         **** 	// sampling speed
  17:ADC.c         **** 	ADCSRA |= (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2); 
  96               		.stabn	68,0,17,.LM4-.LFBB1
  97               	.LM4:
GAS LISTING /tmp/ccqieEPI.s 			page 3


  98 000e 86B1      		in r24,0x6
  99 0010 8760      		ori r24,lo8(7)
 100 0012 86B9      		out 0x6,r24
 101 0014 0895      		ret
 102               		.size	ADC_initialize, .-ADC_initialize
 103               	.Lscope1:
 104               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 105               		.stabd	78,0,0
 106               		.stabs	"__vector_14:F(0,15)",36,0,24,__vector_14
 107               	.global	__vector_14
 108               		.type	__vector_14, @function
 109               	__vector_14:
 110               		.stabd	46,0,0
  18:ADC.c         **** }
  19:ADC.c         **** 
  20:ADC.c         **** // The ADC interupt function is automatically triggered
  21:ADC.c         **** // when the ADC has finished converting. Here we store 
  22:ADC.c         **** // the value. The main loop then restarts the DAC on 
  23:ADC.c         **** // a different channel.
  24:ADC.c         **** ISR(ADC_vect)
  25:ADC.c         **** {
 111               		.stabn	68,0,25,.LM5-.LFBB2
 112               	.LM5:
 113               	.LFBB2:
 114 0016 1F92      		push r1
 115 0018 0F92      		push r0
 116 001a 0FB6      		in r0,__SREG__
 117 001c 0F92      		push r0
 118 001e 1124      		clr __zero_reg__
 119 0020 8F93      		push r24
 120 0022 9F93      		push r25
 121               	/* prologue: Signal */
 122               	/* frame size = 0 */
 123               	/* stack size = 5 */
 124               	.L__stack_usage = 5
  26:ADC.c         **** 	ADC_reading = ADC;
 125               		.stabn	68,0,26,.LM6-.LFBB2
 126               	.LM6:
 127 0024 84B1      		in r24,0x4
 128 0026 95B1      		in r25,0x4+1
 129 0028 9093 0000 		sts ADC_reading+1,r25
 130 002c 8093 0000 		sts ADC_reading,r24
  27:ADC.c         **** 	ADC_status |= ADC_NEWREADING;
 131               		.stabn	68,0,27,.LM7-.LFBB2
 132               	.LM7:
 133 0030 8091 0000 		lds r24,ADC_status
 134 0034 8064      		ori r24,lo8(64)
 135 0036 8093 0000 		sts ADC_status,r24
 136               	/* epilogue start */
  28:ADC.c         **** }
 137               		.stabn	68,0,28,.LM8-.LFBB2
 138               	.LM8:
 139 003a 9F91      		pop r25
 140 003c 8F91      		pop r24
 141 003e 0F90      		pop r0
 142 0040 0FBE      		out __SREG__,r0
 143 0042 0F90      		pop r0
GAS LISTING /tmp/ccqieEPI.s 			page 4


 144 0044 1F90      		pop r1
 145 0046 1895      		reti
 146               		.size	__vector_14, .-__vector_14
 147               	.Lscope2:
 148               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 149               		.stabd	78,0,0
 150               	.global	ADC_status
 151               		.section .bss
 152               		.type	ADC_status, @object
 153               		.size	ADC_status, 1
 154               	ADC_status:
 155 0000 00        		.zero	1
 156               	.global	ADC_reading
 157               		.type	ADC_reading, @object
 158               		.size	ADC_reading, 2
 159               	ADC_reading:
 160 0001 0000      		.zero	2
 161               		.stabs	"ADC_reading:G(6,4)",32,0,4,0
 162               		.stabs	"ADC_status:G(0,11)",32,0,5,0
 163               		.text
 164               		.stabs	"",100,0,0,.Letext0
 165               	.Letext0:
 166               		.ident	"GCC: (GNU) 4.7.2"
 167               	.global __do_clear_bss
GAS LISTING /tmp/ccqieEPI.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ADC.c
     /tmp/ccqieEPI.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccqieEPI.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccqieEPI.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccqieEPI.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccqieEPI.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccqieEPI.s:75     .text:0000000000000000 ADC_initialize
     /tmp/ccqieEPI.s:154    .bss:0000000000000000 ADC_status
     /tmp/ccqieEPI.s:109    .text:0000000000000016 __vector_14
     /tmp/ccqieEPI.s:159    .bss:0000000000000001 ADC_reading

UNDEFINED SYMBOLS
__do_clear_bss
