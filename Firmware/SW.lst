GAS LISTING /tmp/ccARnCwz.s 			page 1


   1               		.file	"SW.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/ffg/DATA/Electronics/AVR/PSU/",100,0,2,.Ltext0
   8               		.stabs	"SW.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  27               		.stabs	"SW.h",130,0,0,0
  28               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/avr/io.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/inttypes.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.7.2/include/stdint.h",130,0,0,0
  32               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/stdint.h",130,0,0,0
  33               		.stabs	"int8_t:t(6,1)=(0,10)",128,0,121,0
  34               		.stabs	"uint8_t:t(6,2)=(0,11)",128,0,122,0
  35               		.stabs	"int16_t:t(6,3)=(0,1)",128,0,123,0
  36               		.stabs	"uint16_t:t(6,4)=(0,4)",128,0,124,0
  37               		.stabs	"int32_t:t(6,5)=(0,3)",128,0,125,0
  38               		.stabs	"uint32_t:t(6,6)=(0,5)",128,0,126,0
  39               		.stabs	"int64_t:t(6,7)=(0,6)",128,0,128,0
  40               		.stabs	"uint64_t:t(6,8)=(0,7)",128,0,129,0
  41               		.stabs	"intptr_t:t(6,9)=(6,3)",128,0,142,0
  42               		.stabs	"uintptr_t:t(6,10)=(6,4)",128,0,147,0
  43               		.stabs	"int_least8_t:t(6,11)=(6,1)",128,0,159,0
  44               		.stabs	"uint_least8_t:t(6,12)=(6,2)",128,0,164,0
  45               		.stabs	"int_least16_t:t(6,13)=(6,3)",128,0,169,0
  46               		.stabs	"uint_least16_t:t(6,14)=(6,4)",128,0,174,0
  47               		.stabs	"int_least32_t:t(6,15)=(6,5)",128,0,179,0
  48               		.stabs	"uint_least32_t:t(6,16)=(6,6)",128,0,184,0
  49               		.stabs	"int_least64_t:t(6,17)=(6,7)",128,0,192,0
  50               		.stabs	"uint_least64_t:t(6,18)=(6,8)",128,0,199,0
  51               		.stabs	"int_fast8_t:t(6,19)=(6,1)",128,0,213,0
  52               		.stabs	"uint_fast8_t:t(6,20)=(6,2)",128,0,218,0
  53               		.stabs	"int_fast16_t:t(6,21)=(6,3)",128,0,223,0
  54               		.stabs	"uint_fast16_t:t(6,22)=(6,4)",128,0,228,0
  55               		.stabs	"int_fast32_t:t(6,23)=(6,5)",128,0,233,0
  56               		.stabs	"uint_fast32_t:t(6,24)=(6,6)",128,0,238,0
  57               		.stabs	"int_fast64_t:t(6,25)=(6,7)",128,0,246,0
GAS LISTING /tmp/ccARnCwz.s 			page 2


  58               		.stabs	"uint_fast64_t:t(6,26)=(6,8)",128,0,253,0
  59               		.stabs	"intmax_t:t(6,27)=(6,7)",128,0,273,0
  60               		.stabs	"uintmax_t:t(6,28)=(6,8)",128,0,278,0
  61               		.stabn	162,0,0,0
  62               		.stabn	162,0,0,0
  63               		.stabs	"int_farptr_t:t(4,1)=(6,5)",128,0,77,0
  64               		.stabs	"uint_farptr_t:t(4,2)=(6,6)",128,0,81,0
  65               		.stabn	162,0,0,0
  66               		.stabn	162,0,0,0
  67               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/avr/fuse.h",130,0,0,0
  68               		.stabs	"__fuse_t:t(7,1)=(7,2)=s2low:(0,11),0,8;high:(0,11),8,8;;",128,0,252,0
  69               		.stabn	162,0,0,0
  70               		.stabn	162,0,0,0
  71               		.stabn	162,0,0,0
  72               		.stabs	"SW_Initialize:F(0,15)",36,0,7,SW_Initialize
  73               	.global	SW_Initialize
  74               		.type	SW_Initialize, @function
  75               	SW_Initialize:
  76               		.stabd	46,0,0
   1:SW.c          **** #include "SW.h"
   2:SW.c          **** 
   3:SW.c          **** unsigned char SW_state = 0xff;
   4:SW.c          **** unsigned char encoderControls = VOLTAGE;
   5:SW.c          **** 
   6:SW.c          **** 
   7:SW.c          **** void SW_Initialize(void)
   8:SW.c          **** {
  77               		.stabn	68,0,8,.LM0-.LFBB1
  78               	.LM0:
  79               	.LFBB1:
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
   9:SW.c          **** 	// Set up switches
  10:SW.c          **** 	DDRD &= ~1 << PD2;	// Sw3 (interupt pin)
  84               		.stabn	68,0,10,.LM1-.LFBB1
  85               	.LM1:
  86 0000 81B3      		in r24,0x11
  87 0002 887F      		andi r24,lo8(-8)
  88 0004 81BB      		out 0x11,r24
  11:SW.c          **** 	PORTD |= 1 << PD2;	// Turn on pull-up
  89               		.stabn	68,0,11,.LM2-.LFBB1
  90               	.LM2:
  91 0006 929A      		sbi 0x12,2
  12:SW.c          **** 	DDRD &= ~1 << PD3;	// Sw2 (interupt pin)
  92               		.stabn	68,0,12,.LM3-.LFBB1
  93               	.LM3:
  94 0008 81B3      		in r24,0x11
  95 000a 807F      		andi r24,lo8(-16)
  96 000c 81BB      		out 0x11,r24
  13:SW.c          **** 	PORTD |= 1 << PD3;
  97               		.stabn	68,0,13,.LM4-.LFBB1
  98               	.LM4:
  99 000e 939A      		sbi 0x12,3
  14:SW.c          **** 	DDRD &= ~1 << PD4;	// Sw1
 100               		.stabn	68,0,14,.LM5-.LFBB1
GAS LISTING /tmp/ccARnCwz.s 			page 3


 101               	.LM5:
 102 0010 81B3      		in r24,0x11
 103 0012 807E      		andi r24,lo8(-32)
 104 0014 81BB      		out 0x11,r24
  15:SW.c          **** 	PORTD |= 1 << PD4;
 105               		.stabn	68,0,15,.LM6-.LFBB1
 106               	.LM6:
 107 0016 949A      		sbi 0x12,4
  16:SW.c          **** 
  17:SW.c          **** 	// Set up rotary encoder
  18:SW.c          **** 	DDRC &= ~1 << PC3;	// Pin A
 108               		.stabn	68,0,18,.LM7-.LFBB1
 109               	.LM7:
 110 0018 84B3      		in r24,0x14
 111 001a 807F      		andi r24,lo8(-16)
 112 001c 84BB      		out 0x14,r24
  19:SW.c          **** 	PORTC |= 1 << PC3;
 113               		.stabn	68,0,19,.LM8-.LFBB1
 114               	.LM8:
 115 001e AB9A      		sbi 0x15,3
  20:SW.c          **** 	DDRC &= ~1 << PC4;	// Pin B
 116               		.stabn	68,0,20,.LM9-.LFBB1
 117               	.LM9:
 118 0020 84B3      		in r24,0x14
 119 0022 807E      		andi r24,lo8(-32)
 120 0024 84BB      		out 0x14,r24
  21:SW.c          **** 	PORTC |= 1 << PC4;
 121               		.stabn	68,0,21,.LM10-.LFBB1
 122               	.LM10:
 123 0026 AC9A      		sbi 0x15,4
  22:SW.c          **** 	DDRC &= ~1 << PC5;	// Encoder Sw
 124               		.stabn	68,0,22,.LM11-.LFBB1
 125               	.LM11:
 126 0028 84B3      		in r24,0x14
 127 002a 807C      		andi r24,lo8(-64)
 128 002c 84BB      		out 0x14,r24
  23:SW.c          **** 	PORTC |= 1 << PC5;
 129               		.stabn	68,0,23,.LM12-.LFBB1
 130               	.LM12:
 131 002e AD9A      		sbi 0x15,5
 132 0030 0895      		ret
 133               		.size	SW_Initialize, .-SW_Initialize
 134               	.Lscope1:
 135               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 136               		.stabd	78,0,0
 137               		.stabs	"SW_CheckEncoder:F(0,11)",36,0,99,SW_CheckEncoder
 138               	.global	SW_CheckEncoder
 139               		.type	SW_CheckEncoder, @function
 140               	SW_CheckEncoder:
 141               		.stabd	46,0,0
  24:SW.c          **** }
  25:SW.c          **** 
  26:SW.c          **** // We use the following table to read the rotary encoder correctly
  27:SW.c          **** // in order to register a "click" the encoder must go through five
  28:SW.c          **** // states:
  29:SW.c          **** //	00 -> 01 -> 11 
  30:SW.c          **** //	11 -> 10 -> 00
GAS LISTING /tmp/ccARnCwz.s 			page 4


  31:SW.c          **** // for clockwise and
  32:SW.c          **** //	00 -> 10 -> 11 
  33:SW.c          **** //	11 -> 01 -> 00
  34:SW.c          **** // for counter clockwise. We will make use of this WHOLE chain to
  35:SW.c          **** // determine the order of direction and to midigate any bounce.
  36:SW.c          **** // The first entry in the table (the row) is the previous state,
  37:SW.c          **** // the second entry is the current read state.
  38:SW.c          **** const unsigned char rotaryTable[6][4] = {
  39:SW.c          **** 	// 00 is an arbitrary state, and here considered the
  40:SW.c          **** 	// starting state of the encoder.
  41:SW.c          **** //  {00,   01, 10, 11}	for reference
  42:SW.c          **** 	{ 0, 	1,  4, 	0	},	// start at 00
  43:SW.c          **** 	{ 0, 	1, 	0, 	0x12},	// CW  from 00
  44:SW.c          **** 	{ 2, 	5, 	3, 	2	},	// start at 11
  45:SW.c          **** 	{ 0x10, 2, 	3, 	2	},  // CW  from 11
  46:SW.c          **** 	{ 0,	0,	4,	0x22},	// CCW from 00
  47:SW.c          **** 	{ 0x20,	5,	2,	2	},	// CCW from 11
  48:SW.c          **** };
  49:SW.c          **** 
  50:SW.c          **** // Encoder function takes the value to increment and 
  51:SW.c          **** // the increment amount. it returns 1 if something is
  52:SW.c          **** // done, otherwise 
  53:SW.c          **** /*
  54:SW.c          **** unsigned char SW_CheckEncoder(uint16_t *value, uint8_t increment)
  55:SW.c          **** {
  56:SW.c          **** 	if(ENCODERPINA_IS_CLOSED && (switchState & ENCODERPINA_WAS_OPEN))
  57:SW.c          **** 	{
  58:SW.c          **** 		// debounce
  59:SW.c          **** 		_delay_ms(3);
  60:SW.c          **** 		if(ENCODERPINA_IS_CLOSED)
  61:SW.c          **** 		{
  62:SW.c          **** 			if(ENCODERPINB_IS_CLOSED)
  63:SW.c          **** 			{
  64:SW.c          **** 				(*value) -= increment;
  65:SW.c          **** 				switchState &= ~ENCODERPINB_WAS_OPEN;
  66:SW.c          **** 			} 
  67:SW.c          **** 			else
  68:SW.c          **** 			{
  69:SW.c          **** 				(*value) += increment;
  70:SW.c          **** 				(switchState) |= ENCODERPINB_WAS_OPEN;
  71:SW.c          **** 			}
  72:SW.c          **** 			switchState &= ~ENCODERPINA_WAS_OPEN;
  73:SW.c          **** 			return 1;
  74:SW.c          **** 		}
  75:SW.c          **** 	}
  76:SW.c          **** 	if(ENCODERPINA_IS_OPEN && !(switchState & ENCODERPINA_WAS_OPEN))
  77:SW.c          **** 	{
  78:SW.c          **** 		// debounce
  79:SW.c          **** 		_delay_ms(3);
  80:SW.c          **** 		if(ENCODERPINA_IS_OPEN)
  81:SW.c          **** 		{
  82:SW.c          **** 			if(ENCODERPINB_IS_CLOSED)
  83:SW.c          **** 			{
  84:SW.c          **** 				(*value) += increment;
  85:SW.c          **** 				(switchState) &= ~ENCODERPINB_WAS_OPEN;
  86:SW.c          **** 			} 
  87:SW.c          **** 			else
GAS LISTING /tmp/ccARnCwz.s 			page 5


  88:SW.c          **** 			{
  89:SW.c          **** 				(*value) -= increment;
  90:SW.c          **** 				(switchState) |= ENCODERPINB_WAS_OPEN;
  91:SW.c          **** 			}
  92:SW.c          **** 			switchState |= ENCODERPINA_WAS_OPEN;
  93:SW.c          **** 			return 1;
  94:SW.c          **** 		}
  95:SW.c          **** 	}
  96:SW.c          **** 
  97:SW.c          **** 	return 0;
  98:SW.c          **** }*/
  99:SW.c          **** unsigned char SW_CheckEncoder()
 100:SW.c          **** {
 142               		.stabn	68,0,100,.LM13-.LFBB2
 143               	.LM13:
 144               	.LFBB2:
 145               	/* prologue: function */
 146               	/* frame size = 0 */
 147               	/* stack size = 0 */
 148               	.L__stack_usage = 0
 101:SW.c          **** 	SW_encoderState = rotaryTable[SW_encoderState & 0x0f][ENCODER];
 149               		.stabn	68,0,101,.LM14-.LFBB2
 150               	.LM14:
 151 0032 83B3      		in r24,0x13
 152 0034 8695      		lsr r24
 153 0036 8695      		lsr r24
 154 0038 8695      		lsr r24
 155 003a 8370      		andi r24,lo8(3)
 156 003c E091 0000 		lds r30,SW_encoderState
 157 0040 EF70      		andi r30,lo8(15)
 158 0042 94E0      		ldi r25,lo8(4)
 159 0044 E99F      		mul r30,r25
 160 0046 F001      		movw r30,r0
 161 0048 1124      		clr __zero_reg__
 162 004a E80F      		add r30,r24
 163 004c F11D      		adc r31,__zero_reg__
 164 004e E050      		subi r30,lo8(-(rotaryTable))
 165 0050 F040      		sbci r31,hi8(-(rotaryTable))
 166 0052 8081      		ld r24,Z
 167 0054 8093 0000 		sts SW_encoderState,r24
 102:SW.c          **** 	return SW_encoderState & 0x30;	
 103:SW.c          **** }
 168               		.stabn	68,0,103,.LM15-.LFBB2
 169               	.LM15:
 170 0058 8073      		andi r24,lo8(48)
 171 005a 0895      		ret
 172               		.size	SW_CheckEncoder, .-SW_CheckEncoder
 173               	.Lscope2:
 174               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 175               		.stabd	78,0,0
 176               		.stabs	"SW_Check1:F(0,11)",36,0,106,SW_Check1
 177               	.global	SW_Check1
 178               		.type	SW_Check1, @function
 179               	SW_Check1:
 180               		.stabd	46,0,0
 104:SW.c          **** 
 105:SW.c          **** // Check switch functions for all switches
GAS LISTING /tmp/ccARnCwz.s 			page 6


 106:SW.c          **** unsigned char SW_Check1(void)
 107:SW.c          **** {
 181               		.stabn	68,0,107,.LM16-.LFBB3
 182               	.LM16:
 183               	.LFBB3:
 184               	/* prologue: function */
 185               	/* frame size = 0 */
 186               	/* stack size = 0 */
 187               	.L__stack_usage = 0
 108:SW.c          **** 	if (SW1_IS_CLOSED && (SW_state & SW1_WAS_OPEN))
 188               		.stabn	68,0,108,.LM17-.LFBB3
 189               	.LM17:
 190 005c 8499      		sbic 0x10,4
 191 005e 00C0      		rjmp .L4
 192               		.stabn	68,0,108,.LM18-.LFBB3
 193               	.LM18:
 194 0060 8091 0000 		lds r24,SW_state
 195 0064 82FF      		sbrs r24,2
 196 0066 00C0      		rjmp .L4
 197               	.LBB18:
 198               	.LBB19:
 199               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h",132,0,0,.Ltext1
 200               	.Ltext1:
   1:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
GAS LISTING /tmp/ccARnCwz.s 			page 7


  35:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #endif
  41:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  42:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  46:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     \code
  49:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     used.
  58:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  59:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  68:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  81:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** */
  82:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
GAS LISTING /tmp/ccARnCwz.s 			page 8


  92:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #endif
  93:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  94:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #endif
  97:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #endif
 103:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 104:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** /**
 105:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 107:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 109:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 112:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 114:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 120:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 125:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 129:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 132:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 140:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****  */
 141:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** void
 142:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** {
 144:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h ****   __STDC_HOSTED__
GAS LISTING /tmp/ccARnCwz.s 			page 9


 149:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 153:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 156:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 159:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 	#else
 160:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 		//round up by default
 161:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 	#endif
 163:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 
 164:/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 201               		.stabn	68,0,164,.LM19-.LFBB3
 202               	.LM19:
 203 0068 8FE3      		ldi r24,lo8(7999)
 204 006a 9FE1      		ldi r25,hi8(7999)
 205 006c 0197      		1: sbiw r24,1
 206 006e 01F4      		brne 1b
 207 0070 00C0      		rjmp .
 208 0072 0000      		nop
 209               	.LBE19:
 210               	.LBE18:
 211               		.stabs	"SW.c",132,0,0,.Ltext2
 212               	.Ltext2:
 109:SW.c          **** 	{
 110:SW.c          **** 		_delay_ms(2);
 111:SW.c          **** 		if (SW1_IS_CLOSED)
 213               		.stabn	68,0,111,.LM20-.LFBB3
 214               	.LM20:
 215 0074 8499      		sbic 0x10,4
 216 0076 00C0      		rjmp .L4
 112:SW.c          **** 		{
 113:SW.c          **** 			SW_state &= ~SW1_WAS_OPEN;
 217               		.stabn	68,0,113,.LM21-.LFBB3
 218               	.LM21:
 219 0078 8091 0000 		lds r24,SW_state
 220 007c 8B7F      		andi r24,lo8(-5)
 221 007e 8093 0000 		sts SW_state,r24
 114:SW.c          **** 			return 1;
 222               		.stabn	68,0,114,.LM22-.LFBB3
 223               	.LM22:
 224 0082 81E0      		ldi r24,lo8(1)
 225 0084 0895      		ret
 226               	.L4:
 115:SW.c          **** 		}
 116:SW.c          **** 	}
 117:SW.c          **** 	if (SW1_IS_OPEN && !(SW_state & SW1_WAS_OPEN))
 227               		.stabn	68,0,117,.LM23-.LFBB3
 228               	.LM23:
 229 0086 849B      		sbis 0x10,4
 230 0088 00C0      		rjmp .L14
 231               	.L6:
 232               		.stabn	68,0,117,.LM24-.LFBB3
GAS LISTING /tmp/ccARnCwz.s 			page 10


 233               	.LM24:
 234 008a 8091 0000 		lds r24,SW_state
 235 008e 82FD      		sbrc r24,2
 236 0090 00C0      		rjmp .L14
 237               	.LBB20:
 238               	.LBB21:
 239               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h",132,0,0,.Ltext3
 240               	.Ltext3:
 241               		.stabn	68,0,164,.LM25-.LFBB3
 242               	.LM25:
 243 0092 8FE3      		ldi r24,lo8(7999)
 244 0094 9FE1      		ldi r25,hi8(7999)
 245 0096 0197      		1: sbiw r24,1
 246 0098 01F4      		brne 1b
 247 009a 00C0      		rjmp .
 248 009c 0000      		nop
 249               	.LBE21:
 250               	.LBE20:
 251               		.stabs	"SW.c",132,0,0,.Ltext4
 252               	.Ltext4:
 118:SW.c          **** 	{
 119:SW.c          **** 		_delay_ms(2);
 120:SW.c          **** 		if(SW1_IS_OPEN)
 253               		.stabn	68,0,120,.LM26-.LFBB3
 254               	.LM26:
 255 009e 849B      		sbis 0x10,4
 256 00a0 00C0      		rjmp .L14
 121:SW.c          **** 			SW_state |= SW1_WAS_OPEN;
 257               		.stabn	68,0,121,.LM27-.LFBB3
 258               	.LM27:
 259 00a2 8091 0000 		lds r24,SW_state
 260 00a6 8460      		ori r24,lo8(4)
 261 00a8 8093 0000 		sts SW_state,r24
 262               	.L14:
 122:SW.c          **** 	}
 123:SW.c          **** 	return 0;
 263               		.stabn	68,0,123,.LM28-.LFBB3
 264               	.LM28:
 265 00ac 80E0      		ldi r24,0
 124:SW.c          **** }
 266               		.stabn	68,0,124,.LM29-.LFBB3
 267               	.LM29:
 268 00ae 0895      		ret
 269               		.size	SW_Check1, .-SW_Check1
 270               	.Lscope3:
 271               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 272               		.stabd	78,0,0
 273               		.stabs	"SW_Check2:F(0,11)",36,0,126,SW_Check2
 274               	.global	SW_Check2
 275               		.type	SW_Check2, @function
 276               	SW_Check2:
 277               		.stabd	46,0,0
 125:SW.c          **** 
 126:SW.c          **** unsigned char SW_Check2(void)
 127:SW.c          **** {
 278               		.stabn	68,0,127,.LM30-.LFBB4
 279               	.LM30:
GAS LISTING /tmp/ccARnCwz.s 			page 11


 280               	.LFBB4:
 281               	/* prologue: function */
 282               	/* frame size = 0 */
 283               	/* stack size = 0 */
 284               	.L__stack_usage = 0
 128:SW.c          **** 	if (SW2_IS_CLOSED && (SW_state & SW2_WAS_OPEN))
 285               		.stabn	68,0,128,.LM31-.LFBB4
 286               	.LM31:
 287 00b0 8399      		sbic 0x10,3
 288 00b2 00C0      		rjmp .L16
 289               		.stabn	68,0,128,.LM32-.LFBB4
 290               	.LM32:
 291 00b4 8091 0000 		lds r24,SW_state
 292 00b8 83FF      		sbrs r24,3
 293 00ba 00C0      		rjmp .L16
 294               	.LBB22:
 295               	.LBB23:
 296               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h",132,0,0,.Ltext5
 297               	.Ltext5:
 298               		.stabn	68,0,164,.LM33-.LFBB4
 299               	.LM33:
 300 00bc 8FE3      		ldi r24,lo8(7999)
 301 00be 9FE1      		ldi r25,hi8(7999)
 302 00c0 0197      		1: sbiw r24,1
 303 00c2 01F4      		brne 1b
 304 00c4 00C0      		rjmp .
 305 00c6 0000      		nop
 306               	.LBE23:
 307               	.LBE22:
 308               		.stabs	"SW.c",132,0,0,.Ltext6
 309               	.Ltext6:
 129:SW.c          **** 	{
 130:SW.c          **** 		_delay_ms(2);
 131:SW.c          **** 		if (SW2_IS_CLOSED)
 310               		.stabn	68,0,131,.LM34-.LFBB4
 311               	.LM34:
 312 00c8 8399      		sbic 0x10,3
 313 00ca 00C0      		rjmp .L16
 132:SW.c          **** 		{
 133:SW.c          **** 			SW_state &= ~SW2_WAS_OPEN;
 314               		.stabn	68,0,133,.LM35-.LFBB4
 315               	.LM35:
 316 00cc 8091 0000 		lds r24,SW_state
 317 00d0 877F      		andi r24,lo8(-9)
 318 00d2 8093 0000 		sts SW_state,r24
 134:SW.c          **** 			return 1;
 319               		.stabn	68,0,134,.LM36-.LFBB4
 320               	.LM36:
 321 00d6 81E0      		ldi r24,lo8(1)
 322 00d8 0895      		ret
 323               	.L16:
 135:SW.c          **** 		}
 136:SW.c          **** 	}
 137:SW.c          **** 	if (SW2_IS_OPEN && !(SW_state & SW2_WAS_OPEN))
 324               		.stabn	68,0,137,.LM37-.LFBB4
 325               	.LM37:
 326 00da 839B      		sbis 0x10,3
GAS LISTING /tmp/ccARnCwz.s 			page 12


 327 00dc 00C0      		rjmp .L26
 328               	.L18:
 329               		.stabn	68,0,137,.LM38-.LFBB4
 330               	.LM38:
 331 00de 8091 0000 		lds r24,SW_state
 332 00e2 83FD      		sbrc r24,3
 333 00e4 00C0      		rjmp .L26
 334               	.LBB24:
 335               	.LBB25:
 336               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h",132,0,0,.Ltext7
 337               	.Ltext7:
 338               		.stabn	68,0,164,.LM39-.LFBB4
 339               	.LM39:
 340 00e6 8FE3      		ldi r24,lo8(7999)
 341 00e8 9FE1      		ldi r25,hi8(7999)
 342 00ea 0197      		1: sbiw r24,1
 343 00ec 01F4      		brne 1b
 344 00ee 00C0      		rjmp .
 345 00f0 0000      		nop
 346               	.LBE25:
 347               	.LBE24:
 348               		.stabs	"SW.c",132,0,0,.Ltext8
 349               	.Ltext8:
 138:SW.c          **** 	{
 139:SW.c          **** 		_delay_ms(2);
 140:SW.c          **** 		if(SW2_IS_OPEN)
 350               		.stabn	68,0,140,.LM40-.LFBB4
 351               	.LM40:
 352 00f2 839B      		sbis 0x10,3
 353 00f4 00C0      		rjmp .L26
 141:SW.c          **** 			SW_state |= SW2_WAS_OPEN;
 354               		.stabn	68,0,141,.LM41-.LFBB4
 355               	.LM41:
 356 00f6 8091 0000 		lds r24,SW_state
 357 00fa 8860      		ori r24,lo8(8)
 358 00fc 8093 0000 		sts SW_state,r24
 359               	.L26:
 142:SW.c          **** 	}
 143:SW.c          **** 	return 0;
 360               		.stabn	68,0,143,.LM42-.LFBB4
 361               	.LM42:
 362 0100 80E0      		ldi r24,0
 144:SW.c          **** }
 363               		.stabn	68,0,144,.LM43-.LFBB4
 364               	.LM43:
 365 0102 0895      		ret
 366               		.size	SW_Check2, .-SW_Check2
 367               	.Lscope4:
 368               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 369               		.stabd	78,0,0
 370               		.stabs	"SW_Check3:F(0,11)",36,0,146,SW_Check3
 371               	.global	SW_Check3
 372               		.type	SW_Check3, @function
 373               	SW_Check3:
 374               		.stabd	46,0,0
 145:SW.c          **** 
 146:SW.c          **** unsigned char SW_Check3(void)
GAS LISTING /tmp/ccARnCwz.s 			page 13


 147:SW.c          **** {
 375               		.stabn	68,0,147,.LM44-.LFBB5
 376               	.LM44:
 377               	.LFBB5:
 378               	/* prologue: function */
 379               	/* frame size = 0 */
 380               	/* stack size = 0 */
 381               	.L__stack_usage = 0
 148:SW.c          **** 	if (SW3_IS_CLOSED && (SW_state & SW3_WAS_OPEN))
 382               		.stabn	68,0,148,.LM45-.LFBB5
 383               	.LM45:
 384 0104 8299      		sbic 0x10,2
 385 0106 00C0      		rjmp .L28
 386               		.stabn	68,0,148,.LM46-.LFBB5
 387               	.LM46:
 388 0108 8091 0000 		lds r24,SW_state
 389 010c 84FF      		sbrs r24,4
 390 010e 00C0      		rjmp .L28
 391               	.LBB26:
 392               	.LBB27:
 393               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h",132,0,0,.Ltext9
 394               	.Ltext9:
 395               		.stabn	68,0,164,.LM47-.LFBB5
 396               	.LM47:
 397 0110 8FE3      		ldi r24,lo8(7999)
 398 0112 9FE1      		ldi r25,hi8(7999)
 399 0114 0197      		1: sbiw r24,1
 400 0116 01F4      		brne 1b
 401 0118 00C0      		rjmp .
 402 011a 0000      		nop
 403               	.LBE27:
 404               	.LBE26:
 405               		.stabs	"SW.c",132,0,0,.Ltext10
 406               	.Ltext10:
 149:SW.c          **** 	{
 150:SW.c          **** 		_delay_ms(2);
 151:SW.c          **** 		if (SW3_IS_CLOSED)
 407               		.stabn	68,0,151,.LM48-.LFBB5
 408               	.LM48:
 409 011c 8299      		sbic 0x10,2
 410 011e 00C0      		rjmp .L28
 152:SW.c          **** 		{
 153:SW.c          **** 			SW_state &= ~SW3_WAS_OPEN;
 411               		.stabn	68,0,153,.LM49-.LFBB5
 412               	.LM49:
 413 0120 8091 0000 		lds r24,SW_state
 414 0124 8F7E      		andi r24,lo8(-17)
 415 0126 8093 0000 		sts SW_state,r24
 154:SW.c          **** 			return 1;
 416               		.stabn	68,0,154,.LM50-.LFBB5
 417               	.LM50:
 418 012a 81E0      		ldi r24,lo8(1)
 419 012c 0895      		ret
 420               	.L28:
 155:SW.c          **** 		}
 156:SW.c          **** 	}
 157:SW.c          **** 	if (SW3_IS_OPEN && !(SW_state & SW3_WAS_OPEN))
GAS LISTING /tmp/ccARnCwz.s 			page 14


 421               		.stabn	68,0,157,.LM51-.LFBB5
 422               	.LM51:
 423 012e 829B      		sbis 0x10,2
 424 0130 00C0      		rjmp .L38
 425               	.L30:
 426               		.stabn	68,0,157,.LM52-.LFBB5
 427               	.LM52:
 428 0132 8091 0000 		lds r24,SW_state
 429 0136 84FD      		sbrc r24,4
 430 0138 00C0      		rjmp .L38
 431               	.LBB28:
 432               	.LBB29:
 433               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h",132,0,0,.Ltext11
 434               	.Ltext11:
 435               		.stabn	68,0,164,.LM53-.LFBB5
 436               	.LM53:
 437 013a 8FE3      		ldi r24,lo8(7999)
 438 013c 9FE1      		ldi r25,hi8(7999)
 439 013e 0197      		1: sbiw r24,1
 440 0140 01F4      		brne 1b
 441 0142 00C0      		rjmp .
 442 0144 0000      		nop
 443               	.LBE29:
 444               	.LBE28:
 445               		.stabs	"SW.c",132,0,0,.Ltext12
 446               	.Ltext12:
 158:SW.c          **** 	{
 159:SW.c          **** 		_delay_ms(2);
 160:SW.c          **** 		if(SW3_IS_OPEN)
 447               		.stabn	68,0,160,.LM54-.LFBB5
 448               	.LM54:
 449 0146 829B      		sbis 0x10,2
 450 0148 00C0      		rjmp .L38
 161:SW.c          **** 			SW_state |= SW3_WAS_OPEN;
 451               		.stabn	68,0,161,.LM55-.LFBB5
 452               	.LM55:
 453 014a 8091 0000 		lds r24,SW_state
 454 014e 8061      		ori r24,lo8(16)
 455 0150 8093 0000 		sts SW_state,r24
 456               	.L38:
 162:SW.c          **** 	}
 163:SW.c          **** 	return 0;
 457               		.stabn	68,0,163,.LM56-.LFBB5
 458               	.LM56:
 459 0154 80E0      		ldi r24,0
 164:SW.c          **** }
 460               		.stabn	68,0,164,.LM57-.LFBB5
 461               	.LM57:
 462 0156 0895      		ret
 463               		.size	SW_Check3, .-SW_Check3
 464               	.Lscope5:
 465               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 466               		.stabd	78,0,0
 467               		.stabs	"SW_Check4:F(0,11)",36,0,166,SW_Check4
 468               	.global	SW_Check4
 469               		.type	SW_Check4, @function
 470               	SW_Check4:
GAS LISTING /tmp/ccARnCwz.s 			page 15


 471               		.stabd	46,0,0
 165:SW.c          **** 
 166:SW.c          **** unsigned char SW_Check4(void)
 167:SW.c          **** {
 472               		.stabn	68,0,167,.LM58-.LFBB6
 473               	.LM58:
 474               	.LFBB6:
 475               	/* prologue: function */
 476               	/* frame size = 0 */
 477               	/* stack size = 0 */
 478               	.L__stack_usage = 0
 168:SW.c          **** 	if (SW4_IS_CLOSED && (SW_state & SW4_WAS_OPEN))
 479               		.stabn	68,0,168,.LM59-.LFBB6
 480               	.LM59:
 481 0158 9D99      		sbic 0x13,5
 482 015a 00C0      		rjmp .L40
 483               		.stabn	68,0,168,.LM60-.LFBB6
 484               	.LM60:
 485 015c 8091 0000 		lds r24,SW_state
 486 0160 85FF      		sbrs r24,5
 487 0162 00C0      		rjmp .L40
 488               	.LBB30:
 489               	.LBB31:
 490               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h",132,0,0,.Ltext13
 491               	.Ltext13:
 492               		.stabn	68,0,164,.LM61-.LFBB6
 493               	.LM61:
 494 0164 8FE3      		ldi r24,lo8(7999)
 495 0166 9FE1      		ldi r25,hi8(7999)
 496 0168 0197      		1: sbiw r24,1
 497 016a 01F4      		brne 1b
 498 016c 00C0      		rjmp .
 499 016e 0000      		nop
 500               	.LBE31:
 501               	.LBE30:
 502               		.stabs	"SW.c",132,0,0,.Ltext14
 503               	.Ltext14:
 169:SW.c          **** 	{
 170:SW.c          **** 		_delay_ms(2);
 171:SW.c          **** 		if (SW4_IS_CLOSED)
 504               		.stabn	68,0,171,.LM62-.LFBB6
 505               	.LM62:
 506 0170 9D99      		sbic 0x13,5
 507 0172 00C0      		rjmp .L40
 172:SW.c          **** 		{
 173:SW.c          **** 			SW_state &= ~SW4_WAS_OPEN;
 508               		.stabn	68,0,173,.LM63-.LFBB6
 509               	.LM63:
 510 0174 8091 0000 		lds r24,SW_state
 511 0178 8F7D      		andi r24,lo8(-33)
 512 017a 8093 0000 		sts SW_state,r24
 174:SW.c          **** 			return 1;
 513               		.stabn	68,0,174,.LM64-.LFBB6
 514               	.LM64:
 515 017e 81E0      		ldi r24,lo8(1)
 516 0180 0895      		ret
 517               	.L40:
GAS LISTING /tmp/ccARnCwz.s 			page 16


 175:SW.c          **** 		}
 176:SW.c          **** 	}
 177:SW.c          **** 	if (SW4_IS_OPEN && !(SW_state & SW4_WAS_OPEN))
 518               		.stabn	68,0,177,.LM65-.LFBB6
 519               	.LM65:
 520 0182 9D9B      		sbis 0x13,5
 521 0184 00C0      		rjmp .L50
 522               	.L42:
 523               		.stabn	68,0,177,.LM66-.LFBB6
 524               	.LM66:
 525 0186 8091 0000 		lds r24,SW_state
 526 018a 85FD      		sbrc r24,5
 527 018c 00C0      		rjmp .L50
 528               	.LBB32:
 529               	.LBB33:
 530               		.stabs	"/usr/lib/gcc/avr/4.7.2/../../../avr/include/util/delay.h",132,0,0,.Ltext15
 531               	.Ltext15:
 532               		.stabn	68,0,164,.LM67-.LFBB6
 533               	.LM67:
 534 018e 8FE3      		ldi r24,lo8(7999)
 535 0190 9FE1      		ldi r25,hi8(7999)
 536 0192 0197      		1: sbiw r24,1
 537 0194 01F4      		brne 1b
 538 0196 00C0      		rjmp .
 539 0198 0000      		nop
 540               	.LBE33:
 541               	.LBE32:
 542               		.stabs	"SW.c",132,0,0,.Ltext16
 543               	.Ltext16:
 178:SW.c          **** 	{
 179:SW.c          **** 		_delay_ms(2);
 180:SW.c          **** 		if(SW4_IS_OPEN)
 544               		.stabn	68,0,180,.LM68-.LFBB6
 545               	.LM68:
 546 019a 9D9B      		sbis 0x13,5
 547 019c 00C0      		rjmp .L50
 181:SW.c          **** 		SW_state |= SW4_WAS_OPEN;
 548               		.stabn	68,0,181,.LM69-.LFBB6
 549               	.LM69:
 550 019e 8091 0000 		lds r24,SW_state
 551 01a2 8062      		ori r24,lo8(32)
 552 01a4 8093 0000 		sts SW_state,r24
 553               	.L50:
 182:SW.c          **** 	}
 183:SW.c          **** 	return 0;
 554               		.stabn	68,0,183,.LM70-.LFBB6
 555               	.LM70:
 556 01a8 80E0      		ldi r24,0
 184:SW.c          **** }
 557               		.stabn	68,0,184,.LM71-.LFBB6
 558               	.LM71:
 559 01aa 0895      		ret
 560               		.size	SW_Check4, .-SW_Check4
 561               	.Lscope6:
 562               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 563               		.stabd	78,0,0
 564               	.global	rotaryTable
GAS LISTING /tmp/ccARnCwz.s 			page 17


 565               		.section	.rodata
 566               		.type	rotaryTable, @object
 567               		.size	rotaryTable, 24
 568               	rotaryTable:
 569 0000 00        		.byte	0
 570 0001 01        		.byte	1
 571 0002 04        		.byte	4
 572 0003 00        		.byte	0
 573 0004 00        		.byte	0
 574 0005 01        		.byte	1
 575 0006 00        		.byte	0
 576 0007 12        		.byte	18
 577 0008 02        		.byte	2
 578 0009 05        		.byte	5
 579 000a 03        		.byte	3
 580 000b 02        		.byte	2
 581 000c 10        		.byte	16
 582 000d 02        		.byte	2
 583 000e 03        		.byte	3
 584 000f 02        		.byte	2
 585 0010 00        		.byte	0
 586 0011 00        		.byte	0
 587 0012 04        		.byte	4
 588 0013 22        		.byte	34
 589 0014 20        		.byte	32
 590 0015 05        		.byte	5
 591 0016 02        		.byte	2
 592 0017 02        		.byte	2
 593               	.global	encoderControls
 594               		.data
 595               		.type	encoderControls, @object
 596               		.size	encoderControls, 1
 597               	encoderControls:
 598 0000 01        		.byte	1
 599               	.global	SW_state
 600               		.type	SW_state, @object
 601               		.size	SW_state, 1
 602               	SW_state:
 603 0001 FF        		.byte	-1
 604               		.comm	SW_encoderState,1,1
 605               		.stabs	"SW_state:G(0,11)",32,0,3,0
 606               		.stabs	"encoderControls:G(0,11)",32,0,4,0
 607               		.stabs	"SW_encoderState:G(0,11)",32,0,47,0
 608               		.stabs	"rotaryTable:G(0,16)=ar(0,17)=r(0,17);0;0177777;;0;5;(0,18)=ar(0,17);0;3;(0,19)=k(0,11)",32
 609               		.text
 610               		.stabs	"",100,0,0,.Letext0
 611               	.Letext0:
 612               		.ident	"GCC: (GNU) 4.7.2"
 613               	.global __do_copy_data
 614               	.global __do_clear_bss
GAS LISTING /tmp/ccARnCwz.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SW.c
     /tmp/ccARnCwz.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccARnCwz.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccARnCwz.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccARnCwz.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccARnCwz.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccARnCwz.s:75     .text:0000000000000000 SW_Initialize
     /tmp/ccARnCwz.s:140    .text:0000000000000032 SW_CheckEncoder
                            *COM*:0000000000000001 SW_encoderState
     /tmp/ccARnCwz.s:568    .rodata:0000000000000000 rotaryTable
     /tmp/ccARnCwz.s:179    .text:000000000000005c SW_Check1
     /tmp/ccARnCwz.s:602    .data:0000000000000001 SW_state
     /tmp/ccARnCwz.s:276    .text:00000000000000b0 SW_Check2
     /tmp/ccARnCwz.s:373    .text:0000000000000104 SW_Check3
     /tmp/ccARnCwz.s:470    .text:0000000000000158 SW_Check4
     /tmp/ccARnCwz.s:597    .data:0000000000000000 encoderControls

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
